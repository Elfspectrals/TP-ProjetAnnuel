version: "3.9"
services:
  db:
    image: postgres:16-alpine
    container_name: pg-prod
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "5432:5432"
    volumes:
      - pg_data_prod:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-appdb}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: api-prod
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@db:5432/${POSTGRES_DB:-appdb}?schema=public"
      PORT: "8080"
      NODE_ENV: "production"
    ports:
      - "8080:8080"
    restart: unless-stopped

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: web-prod
    depends_on:
      - server
    environment:
      VITE_API_URL: "http://localhost:8080"
      NODE_ENV: "production"
    ports:
      - "3000:8080"
    restart: unless-stopped

volumes:
  pg_data_prod:
